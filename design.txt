ROUGH
    Outline:
        An image will be broken up into square grids of size MxM pixels. These grids are going to be fed into a 
        neural network that will output whether the grid contains impact font or not. The grids have to be large 
        enough so that they contain around one letter of impact font. It should work well, because it's a thingy
        with edges, and I suppose at some layer it should learn all the different letter combinations? Then, if 
        at least P% of the grids in the image have impact font in them, it's an impact font meme.
    
    Main algorithm or something like that:
        1. Downsize image to S total pixels
        2. Sample MxM grids, feed in to network.
            NOTES:
                -images are not going to perfectly divide into MxM grids, so:
                -if a row of grids with M does not fit into the width of the image,
                    -
        3. Network works like the one in nielsen's book, I guess
            1. wait how does it actually work
            NOTES:
                -inaccuracy/cost function is 1-a_n where a_n (a sub n) is the last neuron
                -so will need to find derivative of a_n and just take the positive of that because I want to 
                essentially maximise a_n
                -backprop equation:
                -hidden layers will have the same size, no point in complicating it
        4. If ≥P% are impact, image is impact

    Things to be determined:
        -Values of M=32✓, P
        -How to get images ✓
        -How to downsample ✓
        -How to read images (should be pretty simple) ✓



NEW AND IMPROVED
    Outline:
        Image will be pre-processed:
            to find areas with highest acutance and greatest contrast between black and white, and those areas will be brightened up. 
            The center third of the image will be deliberately darkened. As well as this, the whiteness of an area will increase how 
            much it is brightened up, though this will have a lower impact on the brightening.
        These pre-processed images will be downsized to fit into a neural network of a reasonable size. What I'll end up with will be 
        that impact font memes have a big blob of white at the top and bottom, and the net will assign high weights to these areas, so 
        it will work nicely.

        -Should emphasize vertical/horizontal edges